services:
  backend:
    build:
      context: .
      args:
        NODE_ENV: ${NODE_ENV:-production}
    ports:
      - '3000:3000'
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      - redis
      - postgres
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run dev

  socket-client:
    build:
      context: .
      args:
        NODE_ENV: production
    environment:
      NODE_ENV: production
    command: node dist/utils/socketClient.js
    depends_on:
      - backend

  redis:
    image: redis:7.0
    container_name: redis_backend
    restart: always
    ports:
      - '6379:6379'

  postgres:
    image: postgres:15.2
    container_name: postgres_backend
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '5433:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
